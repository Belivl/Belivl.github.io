---
import Layout from "@layouts/Layout.astro";
import ButtonA from "@src/components/ui/ButtonA.astro";
import ModalGallery from "@src/components/ui/ModalGallery.astro";
---

<Layout title="portfolio">
  <!--Modal -->
  <ModalGallery data="Portfolio" />
  <section class="mx-auto container px-0 flex flex-col gap-16 py-8">
    <div class="flex flex-col gap-4">
      <h1>Portfolio</h1>
      <h2 class="H5 uppercase">Projects</h2>
    </div>
    <!-- 
    <GalleryTabs active="portfolio" />-->
    <div class="flex gap-3">
      <ButtonA size="sm" classes="primary px-4">Portfolio</ButtonA>

      <a href="/gallery/portraits">
        <ButtonA size="sm" classes="default px-4">Portraits</ButtonA>
      </a>
      <a href="/gallery/cars">
        <ButtonA size="sm" classes="default px-4">Automotive</ButtonA>
      </a>
      <a href="/gallery/events">
        <ButtonA size="sm" classes="default px-4">Events</ButtonA>
      </a>
      <a href="/gallery/other">
        <ButtonA size="sm" classes="default px-4">Other</ButtonA>
      </a>
    </div>
    <div class="masonGrid3 w-full">
      <div id="masonCol1" class="masonCol"></div>
      <div id="masonCol2" class="masonCol"></div>
      <div id="masonCol3" class="masonCol"></div>
    </div>
    <!--
    <Pagination
      prevUrl={page.url.prev}
      nextUrl={page.url.next}
      length={page.lastPage}
      currentUrl={page.url.current}
      currentPage={page.currentPage}
      firstUrl={`/${firstPath}`}
      lastUrl={`/${firstPath}/${page.lastPage}`}
    /> -->
  </section>
</Layout>

<script>
  import imagePathsPortfolio from "@src/js/imagePaths/imagePathsPortfolio.js";
  const masonGrid3 = document.querySelector(".masonGrid3");

  let currentColumn = 0;

  function createImageElement(src) {
    const img = document.createElement("img");
    img.src = src;
    img.alt = src;
    img.classList.add("image-item3");
    img.style.marginBottom = "16px";
    img.style.width = "100%";
    img.style.display = "inline-block";
    img.style.borderRadius = "12px";
    return img;
  }

  imagePathsPortfolio.forEach((path, i) => {
    const img = createImageElement(path);
    const btn = document.createElement("button");
    btn.appendChild(img);
    btn.classList.add("grid-item");
    btn.id = i.toString();
    masonGrid3?.children[currentColumn].appendChild(btn);
    //console.log(currentColumn + " I:" + i);
    currentColumn = (currentColumn + 1) % 3;
  });
</script>
<style lang="scss">
  .masonGrid3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: 16px; /* Adjust the gap between columns */
  }
  .image-item3 {
    display: inline-block;
    width: 100%;
    margin-bottom: 16px;
  }

  .masonryCSS {
    display: flex;
    flex-wrap: wrap;
    gap: 36px;
    width: 100%;
  }
  .masonry-item {
    width: 100%;
    max-width: 300px;
  }
  .masonry-item img {
    width: 100%;
    max-width: 300px;
  }

  .grid-item {
    width: 400px;
    margin-bottom: 1rem;
  }
  .grid-item--width2 {
    width: 400px;
  }
  .image-item {
    flex: 1 0 28%;
    min-width: 200px;
    cursor: zoom-in;
  }

  .image-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 250ms cubic-bezier(0.79, 0.25, 0, 1.07);
  }

  .image-item:is(:hover, :focus) img {
    transform: scale(1.03);
  }

  main {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
  }
  .H1 {
    color: var(--grey-light);
    font-size: 61px;
    font-family: var(--fontfam-primary);
    font-weight: 700;
    line-height: 120%;
  }
  .H2 {
    color: var(--grey-100);
    font-size: 16px;
    font-family: var(--fontfam-secondary);
    font-weight: 700;
  }
</style>
