---
import { Image } from "astro:assets";
import { Button } from "../components/ui/button";
import Separator from "../components/ui/Separator.astro";

import translations from "../utils/t.ts";
import experienceTabs from "../js/experience.js";
const t = translations(Astro.url);
---

<div class="flex flex-col gap-4">
  {
    experienceTabs.map((tab, i) => (
      <div class="expBTN">
        <button class="accordion2 flex items-center justify-between bg-grey-500 border border-grey-200 gap-8 md:gap-4 pl-4 py-3 md:pl-8 pr-5 md:py-4 rounded-lg">
          <div class="flex flex-col md:flex-row items-start md:items-center justify-between gap-2 md:gap-5 w-full">
            <span class="font-bold shrink-0">{tab.jobTitle}</span>
            <span class="font-medium shrink-0 text-[12px] md:text-[1rem] text-grey-100">
              {tab.workName}
            </span>
            <Separator data-type="horizontal" class="hidden md:flex" />
            <span class="font-semibold shrink-0 text-[1rem] hidden md:block">
              {tab.jobTime}
            </span>
          </div>
          <span class="material-icons shrink-0">keyboard_arrow_down</span>
        </button>
        <div class="panel  overflow-clip">
          <div class="bar3 overflow-clip flex flex-col md:flex-row p-4 md:p-8 border border-grey-200 gap-8  justify-between">
            
              <div class="flex flex-col justify-start md:justify-between items-start gap-5">
                <div class="flex justify-start items-start md:items-center gap-3 md:gap-9 flex-col md:flex-row">
                  <div class="flex justify-start items-center gap-2">
                    <span class="material-icons">place</span>
                    <span class="text-[14px] font-bold">{tab.workPlace}</span>
                  </div>
                  <div class="flex justify-start items-center gap-2">
                    <span class="material-icons">language</span>
                    <span class="text-[14px] font-bold">
                      <a href={tab.workLink} target="_blank">
                        <Button variant="link" size="sm">
                          {tab.workLinkAlt}
                        </Button>
                      </a>
                    </span>
                  </div>
                  <div class="flex justify-start items-center gap-2 md:hidden">
                    <span class="material-symbols-outlined">
                      {" "}
                      calendar_today
                    </span>
                    <span class="font-semibold shrink-0 text-[14px]">
                      {tab.jobTime}
                    </span>
                  </div>
                </div>

                <p class="font-normal w-full text-[0.85rem] break-words max-char" style="white-space: pre-line;">
                  {tab.aboutWork}
                </p>
               
                <div class="flex justify-start items-center gap-2">
                  {tab.tags.map((tag) => (
                    <div class="pill rounded-md hover:animate-bounce">
                      <span class="pillTech  text-[12px]">{tag}</span>
                    </div>
                  ))}
                </div>
              </div>
              <div class="relative rounded-md">
                <!-- 
                <div class="gradientHERO absolute h-full z-20 inset-0 hidden md:block" />-->
                <Image
                  src={tab.workLogo}
                  alt={tab.workLogoAlt}
                  width={220}
                  height={220}
                  class="rounded-md border border-grey-200 max-w-[120px] "
                />
              </div>
            
          </div>
        </div>
      </div>
    ))
  }
</div>

<script>
  var acc = document.getElementsByClassName("accordion2");
  var i;

  for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function () {
      this.classList.toggle("active");
      var panel = this.nextElementSibling;
      if (panel.style.maxHeight) {
        panel.style.maxHeight = null;
      } else {
        panel.style.maxHeight = panel.scrollHeight + "px";
      }
    });
  }
</script>
<style lang="scss">
  /* Style the buttons that are used to open and close the accordion panel */
  .accordion2 {
    display: flex;
    background: var(--grey-500);
    color: var(--light);
    cursor: pointer;
    padding: 16px 16px 16px 36px;
    width: 100%;
    border: 1px solid var(--grey-200);
    border-radius: 8px;
    outline: none;
    transition: 0.4s;
  }

  /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
  .active,
  .accordion2:hover {
    background: var(--grey-300);
    border: 1px solid var(--grey-100);
  }

  /* Style the accordion panel. Note: hidden by default */
  .panel {
    background: var(--grey-400);
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.2s ease-out;
    border-radius: 8px;
  }
  .panel2 {
    background: var(--grey-400);
    overflow: auto;
    transition: max-height 0.2s ease-out;
    border-radius: 8px;
  }

  .expBTN {
    display: flex;
    flex-direction: column;
    color: var(--light);
    width: 100%;
    gap: 12px;
    opacity: 1;
    transition:
      opacity 2s ease-out,
      display 2s ease-out;
    transition-timing-function: ease-out;

    &:hover > .bar {
      background: var(--grey-400);
      border: 1px solid var(--grey-100);
    }
  }
  .bar2 {
    display: flex;
    width: 100%;
    justify-content: flex-start;
    align-items: center;
    gap: 64px;
    padding: 36px;
    border: 1px solid var(--grey-200);
    border-radius: 8px;
    background: var(--grey-400);
    opacity: 1;
    transition:
      opacity 1s ease-out,
      display 1s ease-out;
    transition-timing-function: ease-out;
  }
  .bar3 {
    opacity: 1;
    transition:
      opacity 1s ease-out,
      display 1s ease-out;
    transition-timing-function: ease-out;
  }
  .pill {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-start;
    padding: 6px 16px;
    gap: 8px;
    background: var(--grey-300);

    flex: none;
    flex-grow: 0;
    order: 0;
  }

  .pillTech {
    color: var(--grey-75);
    letter-spacing: 0.2px;
    font-weight: 500;
    flex: none;
    flex-grow: 0;
    order: 0;
  }
  .gradientHERO {
    background: linear-gradient(90deg, var(--grey-400), rgba(1, 1, 1, 0));
  }
</style>
